{"version":3,"sources":["Top.js","Memberlist.js","Search.js","MemberInfo.js","GameBoard.js","Game.js","App.js","serviceWorker.js","index.js"],"names":["Top","react_default","a","createElement","Link","to","Component","Memberlist","userInfo","currentPage","totalPages","_this","this","flgNext","flgPrev","props","userList","item_list","summary","current_page","total_pages","className","map","row","index","key","user_id","src","photo_url","alt","user_name","type","onClick","e","loadUserInfo","data-page","parseInt","data-id","departmentID","data-query","query","Search","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","isLogin","departmentList","inputText","httpClient","axios","create","baseURL","withCredentials","loadDepartments","res","console","debug","data","code","error","Promise","reject","message","resolve","_this2","get","then","commonResponseHandling","result","setState","_this3","target","params","department_id","getAttribute","page","value","trim","length","_this4","department_name","onChange","changeInputText","onClickSearh","src_Memberlist","loadUserDetail","match","id","main_photo_url","user_kana","nickname","enter_date","slack_desplay_name","mail","GameBoard","cardList","item","data-img","handleCardClick","Game","departmentName","pairNum","flgFirst","firstCard","innerText","num","t","randomUserList","l","n","i","Math","random","push","sort","randomUSerList","PickRandomUserList","GenerateCardList","ShuffleCardList","initGameStatus","setCardList","$target","func","speed","$targetImg","find","stop","animate","left","width","height","imgSrc","attr","addClass","$","removeClass","$secondCard","$firstCard","id1","id2","total","setTimeout","alert","changeCard","showBackside","unlockAllCards","currentTarget","lockCard","showUpside","lockAllCard","judgeCards","_this5","name","startGame","src_GameBoard","App","loadAuth","catch","err","callback","is_login","auth_url","window","location","href","BrowserRouter","basename","process","Route","exact","path","component","MemberInfo","Boolean","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"qTAkBeA,mLAZP,OACAC,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,2EACAF,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMC,GAAG,WAAT,6BACJJ,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMC,GAAG,SAAT,sCAPFC,aCmDHC,mLAjDJ,IACDC,EACAC,EACAC,EAHCC,EAAAC,KAIDC,GAAU,EACVC,GAAU,EAahB,OAZMF,KAAKG,MAAMC,WACXR,EAAWI,KAAKG,MAAMC,SAASC,UAIX,KAHpBR,EAAcG,KAAKG,MAAMC,SAASE,QAAQC,gBAItCL,GAAU,GAEVL,KALJC,EAAaE,KAAKG,MAAMC,SAASE,QAAQE,eAMrCP,GAAU,IAIlBZ,EAAAC,EAAAC,cAAA,WAEGS,KAAKG,MAAMC,SAAWf,EAAAC,EAAAC,cAAA,WACnBF,EAAAC,EAAAC,cAAA,sCACAF,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,MAAIkB,UAAU,gBACTb,EAASc,IAAI,SAACC,EAAKC,GAChB,OACEvB,EAAAC,EAAAC,cAAA,MAAIsB,IAAKF,EAAIG,SACXzB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMC,GAAI,SAAWkB,EAAIG,QAASL,UAAU,cACpCpB,EAAAC,EAAAC,cAAA,OAAKkB,UAAU,mBAAkBpB,EAAAC,EAAAC,cAAA,OAAKwB,IAAKJ,EAAIK,UAAWC,IAAKN,EAAIO,UAAY,wBACvF7B,EAAAC,EAAAC,cAAA,OAAKkB,UAAU,oBAAoBE,EAAIO,gBAMnD7B,EAAAC,EAAAC,cAAA,OAAKkB,UAAU,SACXpB,EAAAC,EAAAC,cAAA,UAAQ4B,KAAK,SAASV,UAAW,cAAsBP,EAAwB,GAAd,aAAmBkB,QAAS,SAAAC,GAAC,OAAItB,EAAKI,MAAMmB,aAAaD,IAAIE,YAAWC,SAAS3B,EAAa,IAAM,EAAG4B,UAASzB,KAAKG,MAAMuB,aAAcC,aAAY3B,KAAKG,MAAMyB,OAAjO,iBACAvC,EAAAC,EAAAC,cAAA,OAAKkB,UAAU,eAAeZ,EAA9B,IAA4CC,EAA5C,sBACAT,EAAAC,EAAAC,cAAA,UAAQ4B,KAAK,SAASV,UAAW,cAAsBR,EAAwB,GAAd,aAAmBmB,QAAS,SAAAC,GAAC,OAAItB,EAAKI,MAAMmB,aAAaD,IAAIE,YAAWC,SAAS3B,EAAa,IAAM,EAAG4B,UAASzB,KAAKG,MAAMuB,aAAcC,aAAY3B,KAAKG,MAAMyB,OAAjO,mBAGHvC,EAAAC,EAAAC,cAAA,qEA5CQG,aC2HVmC,cAxHb,SAAAA,EAAY1B,GAAO,IAAAJ,EAAA,OAAA+B,OAAAC,EAAA,EAAAD,CAAA9B,KAAA6B,IACjB9B,EAAA+B,OAAAE,EAAA,EAAAF,CAAA9B,KAAA8B,OAAAG,EAAA,EAAAH,CAAAD,GAAAK,KAAAlC,KAAMG,KACDgC,MAAQ,CACXC,SAAS,EACTC,eAAgB,GAChBjC,SAAU,KACVsB,aAAc,KACdE,MAAO,KACPU,UAAW,IARIvC,mFAYjBC,KAAKuC,WAAaC,IAAMC,OAAO,CAC7BC,QAAS,kCACTC,iBAAiB,IAGnB3C,KAAK4C,iEAEgBC,GAErB,OADAC,QAAQC,MAAMF,GACQ,QAAlBA,EAAIG,KAAKC,MACXH,QAAQI,MAAML,EAAIG,KAAKA,MAChBG,QAAQC,OAAO,aAAeP,EAAIG,KAAKA,KAAKK,UAE9CF,QAAQG,QAAQT,EAAIG,KAAKA,gDAEhB,IAAAO,EAAAvD,KAChB,OAAOA,KAAKuC,WACTiB,IAAI,oBACJC,KAAKzD,KAAK0D,wBACVD,KAAK,SAAAE,GACJJ,EAAKK,SAAS,CAAEvB,eAAgBsB,2CAGzBtC,GAAG,IAAAwC,EAAA7D,KACR8D,EAASzC,EAAEyC,OACXC,EAAS,CACbC,cAAexC,SAASsC,EAAOG,aAAa,WAAY,KAAO,KAC/DC,KAAM1C,SAASsC,EAAOG,aAAa,aAAc,KAAO,EACxDrC,MAAOkC,EAAOK,OAASL,EAAOG,aAAa,eAAiB,IAE9D,OAAOjE,KAAKuC,WACTiB,IAAI,eAAgB,CAAEO,OAAQA,IAC9BN,KAAKzD,KAAK0D,wBACVD,KAAK,SAAAE,GACJE,EAAKD,SAAS,CACZxD,SAAUuD,EACVjC,aAAcqC,EAAOC,cACrBpC,MAAOmC,EAAOnC,kDAINP,GACd,IAAM8C,EAAQ9C,EAAEyC,OAAOK,MAEvBnE,KAAK4D,SAAS,CACZtB,UAAW6B,yCAGF9C,GAC+C,IAAtDA,EAAEyC,OAAOG,aAAa,cAAcG,OAAOC,QAG/CrE,KAAKsB,aAAaD,oCAEX,IAAAiD,EAAAtE,KACP,OACEX,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,sCACAF,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,8DACAF,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,UACGS,KAAKmC,MAAME,eAAe3B,IAAI,SAACC,EAAKC,GACnC,OACEvB,EAAAC,EAAAC,cAAA,MAAIsB,IAAKD,GACPvB,EAAAC,EAAAC,cAAA,UACE6B,QAAS,SAAAC,GAAC,OAAIiD,EAAKhD,aAAaD,IAChCI,UAASd,EAAIqD,cACb7C,KAAK,UAEJR,EAAI4D,uBAQnBlF,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,gFACAF,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,SAAO4B,KAAK,OAAOqD,SAAU,SAAAnD,GAAC,OAAIiD,EAAKG,gBAAgBpD,MACvDhC,EAAAC,EAAAC,cAAA,UACE6B,QAAS,SAAAC,GAAC,OAAIiD,EAAKI,aAAarD,IAChCM,aAAY3B,KAAKmC,MAAMG,UACvBnB,KAAK,UAHP,+BAUN9B,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACoF,EAAD,CACEvE,SAAUJ,KAAKmC,MAAM/B,SACrBkB,aAAc,SAAAD,GAAC,OAAIiD,EAAKhD,aAAaD,IACrCK,aAAc1B,KAAKmC,MAAMT,aACzBE,MAAO5B,KAAKmC,MAAMP,SAItBvC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMC,GAAG,KAAT,gDAnHaC,aCyFNC,cAzFX,SAAAA,EAAYQ,GAAM,IAAAJ,EAAA,OAAA+B,OAAAC,EAAA,EAAAD,CAAA9B,KAAAL,IACdI,EAAA+B,OAAAE,EAAA,EAAAF,CAAA9B,KAAA8B,OAAAG,EAAA,EAAAH,CAAAnC,GAAAuC,KAAAlC,KAAMG,KACDgC,MAAQ,CACXC,SAAS,EACTxC,SAAU,MAJEG,mFAQlBC,KAAKuC,WAAaC,IAAMC,OAAO,CAC7BC,QAAS,kCACTC,iBAAiB,IAGnB3C,KAAK4E,gEAEkB/B,GAEnB,OADAC,QAAQC,MAAMF,GACQ,QAAlBA,EAAIG,KAAKC,MACTH,QAAQI,MAAML,EAAIG,KAAKA,MAChBG,QAAQC,OAAO,aAAeP,EAAIG,KAAKA,KAAKK,UAEhDF,QAAQG,QAAQT,EAAIG,KAAKA,+CAGrB,IAAAO,EAAAvD,KACP+D,EAAW/D,KAAKG,MAAM0E,MAAtBd,OACFjD,EAAUU,SAASuC,EAAOe,GAAI,IACpC,OAAO9E,KAAKuC,WACTiB,IAAI,aAAc1C,GAClB2C,KAAKzD,KAAK0D,wBACVD,KAAK,SAAAE,GACJJ,EAAKK,SAAS,CACZhE,SAAU+D,uCAKhB,OACEtE,EAAAC,EAAAC,cAAA,WACGS,KAAKmC,MAAMvC,SAAWP,EAAAC,EAAAC,cAAA,WACnBF,EAAAC,EAAAC,cAAA,0BACAF,EAAAC,EAAAC,cAAA,OAAKkB,UAAU,cACXpB,EAAAC,EAAAC,cAAA,OAAKkB,UAAU,mBAAkBpB,EAAAC,EAAAC,cAAA,OAAKwB,IAAKf,KAAKmC,MAAMvC,SAASmF,eAAgB9D,IAAKjB,KAAKmC,MAAMvC,SAASsB,UAAY,wBACpH7B,EAAAC,EAAAC,cAAA,OAAKkB,UAAU,oBACbpB,EAAAC,EAAAC,cAAA,OAAKkB,UAAU,4BACbpB,EAAAC,EAAAC,cAAA,MAAIkB,UAAU,oBACZpB,EAAAC,EAAAC,cAAA,QAAMkB,UAAU,0BAA0BT,KAAKmC,MAAMvC,SAASsB,WAC9D7B,EAAAC,EAAAC,cAAA,QAAMkB,UAAU,yBAAyBT,KAAKmC,MAAMvC,SAASoF,aAGjE3F,EAAAC,EAAAC,cAAA,OAAKkB,UAAU,0BACbpB,EAAAC,EAAAC,cAAA,SAAOkB,UAAU,aACfpB,EAAAC,EAAAC,cAAA,aACEF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,MAAIkB,UAAU,qBAAd,8CACApB,EAAAC,EAAAC,cAAA,MAAIkB,UAAU,mBAAmBT,KAAKmC,MAAMvC,SAASqF,WAEvD5F,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,MAAIkB,UAAU,qBAAd,sBACApB,EAAAC,EAAAC,cAAA,MAAIkB,UAAU,mBAAmBT,KAAKmC,MAAMvC,SAAS2E,kBAEvDlF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,MAAIkB,UAAU,qBAAd,4BACApB,EAAAC,EAAAC,cAAA,MAAIkB,UAAU,mBAAmBT,KAAKmC,MAAMvC,SAASsF,aAEvD7F,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,MAAIkB,UAAU,qBAAd,qBACApB,EAAAC,EAAAC,cAAA,MAAIkB,UAAU,mBAAmBT,KAAKmC,MAAMvC,SAASuF,qBAEvD9F,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,MAAIkB,UAAU,qBAAd,oDACApB,EAAAC,EAAAC,cAAA,MAAIkB,UAAU,mBAAmBT,KAAKmC,MAAMvC,SAASwF,aAO9D/F,EAAAC,EAAAC,cAAA,+EAETF,EAAAC,EAAAC,cAAA,OAAKkB,UAAU,WACfpB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMC,GAAG,WAAT,kCACAJ,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMC,GAAG,KAAT,iDAnFiBC,8BCgBV2F,mLAjBF,IAAAtF,EAAAC,KACCsF,EAAWtF,KAAKG,MAAMmF,SAE5B,OAAwB,IAApBA,EAASjB,OACDhF,EAAAC,EAAAC,cAAA,2EAGJF,EAAAC,EAAAC,cAAA,MAAIuF,GAAG,QACFQ,EAAS5E,IAAI,SAAC6E,EAAM3E,GACjB,OAAQvB,EAAAC,EAAAC,cAAA,MAAIsB,IAAKD,EAAQ2E,EAAKzE,QAASW,UAAS8D,EAAKzE,QAAS0E,WAAUD,EAAKvE,UAAWI,QAAS,SAAAC,GAAC,OAAItB,EAAKI,MAAMsF,gBAAgBpE,KAAIhC,EAAAC,EAAAC,cAAA,OAAKwB,IAAI,eAAeE,IAAI,gBAVjKvB,aC8PTgG,cAzPb,SAAAA,EAAYvF,GAAO,IAAAJ,EAAA,OAAA+B,OAAAC,EAAA,EAAAD,CAAA9B,KAAA0F,IACjB3F,EAAA+B,OAAAE,EAAA,EAAAF,CAAA9B,KAAA8B,OAAAG,EAAA,EAAAH,CAAA4D,GAAAxD,KAAAlC,KAAMG,KACDgC,MAAQ,CACXC,SAAS,EACTC,eAAgB,GAChBjC,SAAU,KACVE,QAAS,KACTqF,eAAgB,GAChBC,QAAS,EACTN,SAAU,GACVO,UAAU,EACVC,UAAW,MAXI/F,mFAejBC,KAAKuC,WAAaC,IAAMC,OAAO,CAC7BC,QAAS,kCACTC,iBAAiB,IAGnB3C,KAAK4C,iEAEgBC,GAErB,OADAC,QAAQC,MAAMF,GACQ,QAAlBA,EAAIG,KAAKC,MACXH,QAAQI,MAAML,EAAIG,KAAKA,MAChBG,QAAQC,OAAO,aAAeP,EAAIG,KAAKA,KAAKK,UAE9CF,QAAQG,QAAQT,EAAIG,KAAKA,gDAEhB,IAAAO,EAAAvD,KAChB,OAAOA,KAAKuC,WACTiB,IAAI,oBACJC,KAAKzD,KAAK0D,wBACVD,KAAK,SAAAE,GACJJ,EAAKK,SAAS,CAAEvB,eAAgBsB,2CAGzBtC,GAAG,IAAAwC,EAAA7D,KACR8D,EAASzC,EAAEyC,OACX6B,EAAiB7B,EAAOiC,UACxBhC,EAAS,CACbC,cAAexC,SAASsC,EAAOG,aAAa,WAAY,KAAO,KAC/DC,KAAM1C,SAASsC,EAAOG,aAAa,aAAc,KAAO,GAE1D,OAAOjE,KAAKuC,WACTiB,IAAI,eAAgB,CAAEO,OAAQA,IAC9BN,KAAKzD,KAAK0D,wBACVD,KAAK,SAAAE,GACJE,EAAKD,SAAS,CACZxD,SAAUuD,EAAOtD,UACjBC,QAASqD,EAAOrD,QAChBqF,eAAgBA,iDAOLvF,EAAU4F,GAM3B,IALA,IAAI1G,EAAIc,EACJ6F,EAAI,GACJC,EAAiB,GACjBC,EAAI7G,EAAE+E,OACN+B,EAAIJ,EAAMG,EAAIH,EAAMG,EACjBC,KAAM,GAAG,CACd,IAAIC,EAAKC,KAAKC,SAAWJ,EAAK,EAC9BD,EAAeE,GAAKH,EAAEI,IAAM/G,EAAE+G,KAC5BF,EACFF,EAAEI,GAAKJ,EAAEE,IAAM7G,EAAE6G,GAEnB,OAAOD,2CAGQA,GAEf,IADA,IAAMZ,EAAW,GACRe,EAAI,EAAGA,EAAIH,EAAe7B,OAAQgC,IAAK,CAC9C,IAAMd,EAAOW,EAAeG,GAC5Bf,EAASkB,KAAKjB,EAAMA,GAEtB,OAAOD,0CAEOA,GACdA,EAASmB,KAAK,WACZ,OAAOH,KAAKC,SAAWD,KAAKC,+CAIpBnG,GACV,GAAiB,OAAbA,EAAJ,CAGA,IAAMsG,EAAiB1G,KAAK2G,mBAAmBvG,EAAU,GACnDkF,EAAWtF,KAAK4G,iBAAiBF,GACvC1G,KAAK6G,gBAAgBvB,GACrBtF,KAAK4D,SAAS,CACZ0B,SAAUA,8CAKZtF,KAAK4D,SAAS,CACZgC,QAAS,EACTE,UAAW,KACXD,UAAU,sCAIJzF,GACRJ,KAAK8G,iBACL9G,KAAK+G,YAAY3G,sCAIR4G,EAASC,EAAMC,GACxB,IAAMC,EAAaH,EAAQI,KAAK,OAChCD,EAAWE,OAAOC,QAAQ,CAAEC,KAAM,MAAQL,GAC1CC,EAAWE,OAAOC,QAAQ,CAAEE,MAAO,IAAKC,OAAQ,OAASP,EAAO,WAC9DD,EAAKD,EAASE,wCAIPF,EAASE,GAClB,IAAMC,EAAaH,EAAQI,KAAK,OAC1BM,EAASV,EAAQhE,KAAK,OAC5BmE,EAAWQ,KAAK,MAAOD,GACvBP,EAAWE,OAAOC,QAAQ,CAAEE,MAAO,QAASC,OAAQ,OAASP,GAC7DF,EAAQK,OAAOC,QAAQ,CAAEC,KAAM,KAAOL,wCAG3BF,EAASE,GACpB,IAAMC,EAAaH,EAAQI,KAAK,OAChCD,EAAWQ,KAAK,MAAO,gBACvBR,EACGE,OACAC,QAAQ,CAAEE,MAAO,QAASC,OAAQ,OAASP,GAC9CF,EAAQK,OAAOC,QAAQ,CAAEC,KAAM,KAAOL,oCAG/BF,GACPA,EAAQY,SAAS,mDAIjBC,IAAE,YAAYD,SAAS,sDAIvBC,IAAE,YAAYC,YAAY,gDAIjBC,EAAab,GAAO,IAAA5C,EAAAtE,KACzB4F,EAAU5F,KAAKmC,MAAMyD,QACnBoC,EAAahI,KAAKmC,MAAM2D,UACxBmC,EAAMD,EAAWhF,KAAK,MACtBkF,EAAMH,EAAY/E,KAAK,MACvBmF,EAAQnI,KAAKmC,MAAMmD,SAASjB,OAC9B4D,IAAQC,GACVF,EAAWJ,SAAS,eACpBG,EAAYH,SAAS,iBACrBhC,IACeuC,EAAQ,GACrBC,WAAW,WACTC,MAAM,2DACL,KAELrI,KAAK4D,SAAS,CACZgC,QAASA,KAGXwC,WAAW,WACT9D,EAAKgE,WAAWP,EAAazD,EAAKiE,cAClCjE,EAAKgE,WAAWN,EAAY1D,EAAKiE,eAChC,KAELvI,KAAK4D,SAAS,CACZiC,UAAU,IAEZuC,WAAW,WACT9D,EAAKkE,kBACI,EAARtB,EAAY,6CAGD7F,GACd,IAAM2F,EAAUa,IAAExG,EAAEoH,eAEhB5C,EAAW7F,KAAKmC,MAAM0D,SAC1B7F,KAAK0I,SAAS1B,GACdhH,KAAKsI,WAAWtB,EAAShH,KAAK2I,WAHhB,MAKG,IAAb9C,EACF7F,KAAK4D,SAAS,CACZkC,UAAWkB,EACXnB,UAAU,KAGZ7F,KAAK4I,cACL5I,KAAK6I,WAAW7B,EAZJ,uCAgBP,IAAA8B,EAAA9I,KACP,OACEX,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,sCACAF,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,4CACAF,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,UACGS,KAAKmC,MAAME,eAAe3B,IAAI,SAACC,EAAKC,GACnC,OACEvB,EAAAC,EAAAC,cAAA,MAAIsB,IAAKD,GACPvB,EAAAC,EAAAC,cAAA,SACE4B,KAAK,QACL4H,KAAK,aACL5E,MAAM,GACN/C,QAAS,SAAAC,GAAC,OAAIyH,EAAKxH,aAAaD,IAChCI,UAASd,EAAIqD,gBAEdrD,EAAI4D,oBAKblF,EAAAC,EAAAC,cAAA,UACE6B,QAAS,SAAAC,GAAC,OAAIyH,EAAKE,UAAUF,EAAK3G,MAAM/B,WACxCe,KAAK,UAFP,wBAQJ9B,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAC0J,EAAD,CACE3D,SAAUtF,KAAKmC,MAAMmD,SACrBG,gBAAiB,SAACpE,EAAGwE,GAAJ,OACfiD,EAAKrD,gBAAgBpE,EAAGwE,IAE1BA,SAAU7F,KAAKG,MAAM0F,YAIzBxG,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMC,GAAG,KAAT,gDApPWC,aCiFJwJ,cA5Eb,SAAAA,EAAY/I,GAAO,IAAAJ,EAAA,OAAA+B,OAAAC,EAAA,EAAAD,CAAA9B,KAAAkJ,IACjBnJ,EAAA+B,OAAAE,EAAA,EAAAF,CAAA9B,KAAA8B,OAAAG,EAAA,EAAAH,CAAAoH,GAAAhH,KAAAlC,KAAMG,KACDgC,MAAQ,CACXC,SAAS,GAHMrC,mFAMC,IAAAwD,EAAAvD,KAElBA,KAAKuC,WAAaC,IAAMC,OAAO,CAC7BC,QAAS,kCACTC,iBAAiB,IAGnB3C,KAAKmJ,WACF1F,KAAK,WACJ,IAAKF,EAAKpB,MAAMC,QACd,OAAOe,QAAQG,YAGlB8F,MAAM,SAAAC,GACLhB,MAAM,sEAAsBgB,wCAGvB,IAAAxF,EAAA7D,KACT,OAAOA,KAAKuC,WACTiB,IAAI,QAAS,CACZO,OAAQ,CACNuF,SAAU,2BAGb7F,KAAKzD,KAAK0D,wBACVD,KAAK,SAAAE,GACAA,EAAO4F,SACT1F,EAAKD,SAAS,CAAExB,SAAS,IAChBuB,EAAO6F,WAChBC,OAAOC,SAASC,KAAOhG,EAAO6F,2DAKf3G,GAErB,OADAC,QAAQC,MAAMF,GACQ,QAAlBA,EAAIG,KAAKC,MACXH,QAAQI,MAAML,EAAIG,KAAKA,MAChBG,QAAQC,OAAO,aAAeP,EAAIG,KAAKA,KAAKK,UAE9CF,QAAQG,QAAQT,EAAIG,KAAKA,uCAIhC,OACE3D,EAAAC,EAAAC,cAACqK,EAAA,EAAD,CAAQC,SAAUC,qBACdzK,EAAAC,EAAAC,cAAA,OAAKkB,UAAU,QACbpB,EAAAC,EAAAC,cAACwK,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAW9K,IACjCC,EAAAC,EAAAC,cAACwK,EAAA,EAAD,CAAOE,KAAK,UAAUC,UAAWrI,IACjCxC,EAAAC,EAAAC,cAACwK,EAAA,EAAD,CAAOE,KAAK,YAAYC,UAAWC,IACnC9K,EAAAC,EAAAC,cAACwK,EAAA,EAAD,CAAOE,KAAK,QAAQC,UAAWxE,aAzDzBhG,aCCE0K,QACW,cAA7BX,OAAOC,SAASW,UAEe,UAA7BZ,OAAOC,SAASW,UAEhBZ,OAAOC,SAASW,SAASxF,MACvB,2DCZNyF,IAASC,OAAOlL,EAAAC,EAAAC,cAACiL,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMpH,KAAK,SAAAqH,GACjCA,EAAaC","file":"static/js/main.2699bd02.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Link } from \"react-router-dom\";\nimport './App.css';\n\nclass Top extends Component {\n    render() {\n        return (\n        <div>\n            <h1>ニジボックス 社員名簿</h1>\n            <ul>\n                <li><Link to=\"/search\">社員検索</Link></li>\n                <li><Link to=\"/game\">神経衰弱</Link></li>\n            </ul>\n        </div>\n        )\n    }\n}\n\nexport default Top;\n","import React, { Component } from 'react';\nimport { Link } from \"react-router-dom\";\nimport './App.css';\n\nclass Memberlist extends Component {\n\n  render() {\n      let userInfo;\n      let currentPage;\n      let totalPages;\n      let flgNext = true;\n      let flgPrev = true;\n      if (this.props.userList){\n          userInfo = this.props.userList.item_list;\n          currentPage = this.props.userList.summary.current_page;\n          totalPages = this.props.userList.summary.total_pages;\n\n          if (currentPage === 1) {\n              flgPrev = false;\n          }\n          if (currentPage === totalPages) {\n              flgNext = false;\n          }\n        }\n    return (\n      <div>\n\n        {this.props.userList ? <div>\n            <h2>社員一覧</h2>\n            <div>\n                <ul className=\"l-memberlist\">\n                    {userInfo.map((row, index) => {\n                        return (\n                          <li key={row.user_id}>\n                            <Link to={\"/user/\" + row.user_id} className=\"memberlist\">\n                                    <div className=\"memberlist__img\"><img src={row.photo_url} alt={row.user_name + 'の写真'}></img></div>\n                            <div className=\"memberlist__name\">{row.user_name}</div>\n                            </Link>\n                          </li>\n                        );\n                    })}\n                </ul>\n                <div className=\"pager\">\n                    <button type=\"button\" className={\"btn-pager\" + ' ' + (!flgPrev ? \"is-hidden\" : '')} onClick={e => this.props.loadUserInfo(e)} data-page={parseInt(currentPage, 10) - 1} data-id={this.props.departmentID} data-query={this.props.query}> 前へ</button>\n                    <div className=\"pager__page\">{currentPage}/{totalPages}ページ</div>\n                    <button type=\"button\" className={\"btn-pager\" + ' ' + (!flgNext ? \"is-hidden\" : '')} onClick={e => this.props.loadUserInfo(e)} data-page={parseInt(currentPage, 10) + 1} data-id={this.props.departmentID} data-query={this.props.query}>次へ</button>\n                </div>\n            </div>\n        </div> : <p>検索してください</p>\n        }\n      </div>\n    );\n  }\n}\n\nexport default Memberlist;\n","import React, { Component } from 'react';\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\nimport './App.css';\nimport Memberlist from './Memberlist';\n\nclass Search extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLogin: false,\n      departmentList: [],\n      userList: null,\n      departmentID: null,\n      query: null,\n      inputText: \"\"\n    };\n  }\n  componentDidMount() {\n    this.httpClient = axios.create({\n      baseURL: \"https://kadou.i.nijibox.net/api\",\n      withCredentials: true\n    });\n\n    this.loadDepartments();\n  }\n  commonResponseHandling(res) {\n    console.debug(res);\n    if (res.data.code !== \"200\") {\n      console.error(res.data.data);\n      return Promise.reject(\"API Error:\" + res.data.data.message);\n    }\n    return Promise.resolve(res.data.data);\n  }\n  loadDepartments() {\n    return this.httpClient\n      .get(\"/who/departments\")\n      .then(this.commonResponseHandling)\n      .then(result => {\n        this.setState({ departmentList: result });\n      });\n  }\n  loadUserInfo(e) {\n    const target = e.target;\n    const params = {\n      department_id: parseInt(target.getAttribute(\"data-id\"), 10) || null,\n      page: parseInt(target.getAttribute(\"data-page\"), 10) || 1,\n      query: target.value || target.getAttribute(\"data-query\") || \"\"\n    };\n    return this.httpClient\n      .get(\"/who/search/\", { params: params })\n      .then(this.commonResponseHandling)\n      .then(result => {\n        this.setState({\n          userList: result,\n          departmentID: params.department_id,\n          query: params.query\n        });\n      });\n  }\n  changeInputText(e) {\n    const value = e.target.value;\n\n    this.setState({\n      inputText: value\n    });\n  }\n  onClickSearh(e) {\n    if (e.target.getAttribute(\"data-query\").trim().length === 0) {\n        return;\n    }\n    this.loadUserInfo(e);\n  }\n  render() {\n    return (\n      <div>\n        <h1>社員検索</h1>\n        <div>\n          <div>\n            <h2>部署から検索する</h2>\n            <div>\n              <ul>\n                {this.state.departmentList.map((row, index) => {\n                  return (\n                    <li key={index}>\n                      <button\n                        onClick={e => this.loadUserInfo(e)}\n                        data-id={row.department_id}\n                        type=\"button\"\n                      >\n                        {row.department_name}\n                      </button>\n                    </li>\n                  );\n                })}\n              </ul>\n            </div>\n          </div>\n          <div>\n            <h2>フリーワードで検索する</h2>\n            <div>\n              <input type=\"text\" onChange={e => this.changeInputText(e)} />\n              <button\n                onClick={e => this.onClickSearh(e)}\n                data-query={this.state.inputText}\n                type=\"button\"\n              >\n                検索する\n              </button>\n            </div>\n          </div>\n        </div>\n        <div>\n          <Memberlist\n            userList={this.state.userList}\n            loadUserInfo={e => this.loadUserInfo(e)}\n            departmentID={this.state.departmentID}\n            query={this.state.query}\n          />\n        </div>\n\n        <Link to=\"/\">トップへ戻る</Link>\n      </div>\n    );\n  }\n}\n\nexport default Search;\n","import React, { Component } from 'react';\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\nimport './App.css';\n\nclass Memberlist extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n          isLogin: false,\n          userInfo: null\n        }\n    }\n  componentDidMount() {\n    this.httpClient = axios.create({\n      baseURL: \"https://kadou.i.nijibox.net/api\",\n      withCredentials: true\n    });\n\n    this.loadUserDetail();\n  }\n    commonResponseHandling(res) {\n        console.debug(res);\n        if (res.data.code !== \"200\") {\n            console.error(res.data.data);\n            return Promise.reject(\"API Error:\" + res.data.data.message);\n        }\n        return Promise.resolve(res.data.data);\n    }\n\n  loadUserDetail() {\n    const { params } = this.props.match;\n    const user_id = parseInt(params.id, 10);\n    return this.httpClient\n      .get(\"/who/user/\"+ user_id)\n      .then(this.commonResponseHandling)\n      .then(result => {\n        this.setState({\n          userInfo: result\n        });\n      });\n  }\n  render() {\n    return (\n      <div>\n        {this.state.userInfo ? <div>\n            <h2>詳細</h2>\n            <div className=\"memberinfo\">\n                <div className=\"memberinfo__img\"><img src={this.state.userInfo.main_photo_url} alt={this.state.userInfo.user_name + \"の写真\"}/></div>\n                <div className=\"memberinfo__info\">\n                  <div className=\"memberinfo__info__header\">\n                    <h3 className=\"memberinfo-title\">\n                      <span className=\"memberinfo-title__name\">{this.state.userInfo.user_name}</span>\n                      <span className=\"memberinfo-title__sub\">{this.state.userInfo.user_kana}</span>\n                    </h3>\n                  </div>\n                  <div className=\"memberinfo__info__body\">\n                    <table className=\"infotable\">\n                      <tbody>\n                        <tr>\n                          <td className=\"infotable__header\">ニックネーム：</td>\n                          <td className=\"infotable__body\">{this.state.userInfo.nickname}</td>\n                        </tr>\n                        <tr>\n                          <td className=\"infotable__header\">部署：</td>\n                          <td className=\"infotable__body\">{this.state.userInfo.department_name}</td>\n                        </tr>\n                        <tr>\n                          <td className=\"infotable__header\">入社日：</td>\n                          <td className=\"infotable__body\">{this.state.userInfo.enter_date}</td>\n                        </tr>\n                        <tr>\n                          <td className=\"infotable__header\">slack名：</td>\n                          <td className=\"infotable__body\">{this.state.userInfo.slack_desplay_name}</td>\n                        </tr>\n                        <tr>\n                          <td className=\"infotable__header\">メールアドレス：</td>\n                          <td className=\"infotable__body\">{this.state.userInfo.mail}</td>\n                        </tr>\n                      </tbody>\n                    </table>\n                  </div>\n                </div>\n            </div>\n        </div> : <p>該当メンバーがいません</p>\n        }\n        <div className=\"pagenav\">\n        <Link to=\"/search\">検索へ戻る</Link>\n        <Link to=\"/\">トップへ戻る</Link>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Memberlist;\n","import React, { Component } from 'react';\nimport './App.css';\n\nclass GameBoard extends Component {\n    render() {\n        const cardList = this.props.cardList;\n\n        if (cardList.length === 0) {\n            return (<div>部署を選んでください</div>);\n        } else {\n            return (\n                <ul id=\"card\">\n                    {cardList.map((item, index) =>  {\n                        return (<li key={index + item.user_id} data-id={item.user_id} data-img={item.photo_url} onClick={e => this.props.handleCardClick(e)}><img src=\"./nblogo.jpg\" alt=\"\" /></li>);\n                    })}\n                </ul>\n            );\n        }\n    }\n}\n\nexport default GameBoard;","import React, { Component } from 'react';\nimport axios from \"axios\";\nimport $ from \"jquery\";\nimport { Link } from \"react-router-dom\";\nimport GameBoard from \"./GameBoard\";\nimport './App.css';\n\nclass Game extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLogin: false,\n      departmentList: [],\n      userList: null,\n      summary: null,\n      departmentName: \"\",\n      pairNum: 0, //ペアになったカードの組数\n      cardList: [], //各カードの情報を入れる配列({id:user_id, photo: photo_url})\n      flgFirst: true, //クリックしたカードが1枚目かどうかの判定用\n      firstCard: null, //1枚目に引いたカードの番号\n    };\n  }\n  componentDidMount() {\n    this.httpClient = axios.create({\n      baseURL: \"https://kadou.i.nijibox.net/api\",\n      withCredentials: true\n    });\n\n    this.loadDepartments();\n  }\n  commonResponseHandling(res) {\n    console.debug(res);\n    if (res.data.code !== \"200\") {\n      console.error(res.data.data);\n      return Promise.reject(\"API Error:\" + res.data.data.message);\n    }\n    return Promise.resolve(res.data.data);\n  }\n  loadDepartments() {\n    return this.httpClient\n      .get(\"/who/departments\")\n      .then(this.commonResponseHandling)\n      .then(result => {\n        this.setState({ departmentList: result });\n      });\n  }\n  loadUserInfo(e) {\n    const target = e.target;\n    const departmentName = target.innerText;\n    const params = {\n      department_id: parseInt(target.getAttribute(\"data-id\"), 10) || null,\n      page: parseInt(target.getAttribute(\"data-page\"), 10) || 1\n    };\n    return this.httpClient\n      .get(\"/who/search/\", { params: params })\n      .then(this.commonResponseHandling)\n      .then(result => {\n        this.setState({\n          userList: result.item_list,\n          summary: result.summary,\n          departmentName: departmentName\n        });\n      });\n  }\n\n  // 以下ゲームで使いたい関数\n  // カード生成\n  PickRandomUserList(userList, num) {\n    var a = userList;\n    var t = [];\n    var randomUserList = [];\n    var l = a.length;\n    var n = num < l ? num : l;\n    while (n-- > 0) {\n      var i = (Math.random() * l) | 0;\n      randomUserList[n] = t[i] || a[i];\n      --l;\n      t[i] = t[l] || a[l];\n    }\n    return randomUserList;\n  }\n\n  GenerateCardList(randomUserList) {\n    const cardList = [];\n    for (let i = 0; i < randomUserList.length; i++) {\n      const item = randomUserList[i];\n      cardList.push(item, item);\n    }\n    return cardList;\n  }\n  ShuffleCardList(cardList) {\n    cardList.sort(function() {\n      return Math.random() - Math.random();\n    });\n  }\n\n  setCardList(userList) {\n    if (userList === null) {\n      return;\n    }\n    const randomUSerList = this.PickRandomUserList(userList, 5);\n    const cardList = this.GenerateCardList(randomUSerList);\n    this.ShuffleCardList(cardList);\n    this.setState({\n      cardList: cardList\n    });\n  }\n\n  initGameStatus() {\n    this.setState({\n      pairNum: 0,\n      firstCard: null,\n      flgFirst: true\n    })\n  }\n\n  startGame(userList) {\n    this.initGameStatus();\n    this.setCardList(userList);\n  }\n\n  // クリック時の関数\n  changeCard($target, func, speed) {\n    const $targetImg = $target.find(\"img\");\n    $targetImg.stop().animate({ left: \"75\" }, speed);\n    $targetImg.stop().animate({ width: \"0\", height: \"150\" }, speed, function() {\n      func($target, speed);\n    });\n  }\n  //面を開く\n  showUpside($target, speed) {\n    const $targetImg = $target.find(\"img\");\n    const imgSrc = $target.data(\"img\");\n    $targetImg.attr(\"src\", imgSrc);\n    $targetImg.stop().animate({ width: \"150px\", height: \"150\" }, speed);\n    $target.stop().animate({ left: \"0\" }, speed);\n  }\n  //裏を開く\n  showBackside($target, speed) {\n    const $targetImg = $target.find(\"img\");\n    $targetImg.attr(\"src\", \"./nblogo.jpg\");\n    $targetImg\n      .stop()\n      .animate({ width: \"150px\", height: \"150\" }, speed);\n    $target.stop().animate({ left: \"0\" }, speed);\n  }\n  //クリックできないようにカードをロック\n  lockCard($target) {\n    $target.addClass(\"is-locked\");\n  }\n  //全てのカードをロック\n  lockAllCard() {\n    $(\"#card li\").addClass(\"is-locked\");\n  }\n  //全てのカードをアンロック\n  unlockAllCards() {\n    $(\"#card li\").removeClass(\"is-locked\");\n  }\n\n  // 判定\n  judgeCards($secondCard, speed) {\n    let pairNum = this.state.pairNum;\n    const $firstCard = this.state.firstCard;\n    const id1 = $firstCard.data(\"id\");\n    const id2 = $secondCard.data(\"id\");\n    const total = this.state.cardList.length;\n    if (id1 === id2) {\n      $firstCard.addClass(\"is-disabled\");\n      $secondCard.addClass(\"is-disabled\");\n      pairNum++;\n      if(pairNum === total / 2) {\n        setTimeout(() => {\n          alert(\"コンプリート！！！\");\n        }, 1000)\n      }\n      this.setState({\n        pairNum: pairNum\n      });\n    } else {\n      setTimeout(() => {\n        this.changeCard($secondCard, this.showBackside);\n        this.changeCard($firstCard, this.showBackside);\n      }, 1000)\n    }\n    this.setState({\n      flgFirst: true\n    })\n    setTimeout(() => {\n      this.unlockAllCards();\n    }, speed * 2 + 1000);\n  }\n  // カードクリック時の挙動\n  handleCardClick(e) {\n    const $target = $(e.currentTarget);\n    const speed = 150;\n    let flgFirst = this.state.flgFirst;\n    this.lockCard($target);\n    this.changeCard($target, this.showUpside, speed);\n\n    if (flgFirst === true) {\n      this.setState({\n        firstCard: $target,\n        flgFirst: false\n      })\n    } else {\n      this.lockAllCard();\n      this.judgeCards($target, speed);\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <h1>神経衰弱</h1>\n        <div>\n          <h2>部署を選ぶ</h2>\n          <div>\n            <ul>\n              {this.state.departmentList.map((row, index) => {\n                return (\n                  <li key={index}>\n                    <input\n                      type=\"radio\"\n                      name=\"department\"\n                      value=\"\"\n                      onClick={e => this.loadUserInfo(e)}\n                      data-id={row.department_id}\n                    />\n                    {row.department_name}\n                  </li>\n                );\n              })}\n            </ul>\n            <button\n              onClick={e => this.startGame(this.state.userList)}\n              type=\"button\"\n            >\n              遊ぶ！\n            </button>\n          </div>\n        </div>\n        <div>\n          <GameBoard\n            cardList={this.state.cardList}\n            handleCardClick={(e, flgFirst) =>\n              this.handleCardClick(e, flgFirst)\n            }\n            flgFirst={this.props.flgFirst}\n          />\n        </div>\n\n        <Link to=\"/\">トップへ戻る</Link>\n      </div>\n    );\n  }\n}\n\nexport default Game;\n","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport axios from 'axios';\nimport 'ress';\nimport './App.css';\nimport Top from \"./Top\";\nimport Search from \"./Search\";\nimport MemberInfo from \"./MemberInfo\";\nimport Game from \"./Game\";\n\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLogin: false\n    };\n  }\n  componentDidMount() {\n\n    this.httpClient = axios.create({\n      baseURL: \"https://kadou.i.nijibox.net/api\",\n      withCredentials: true\n    });\n\n    this.loadAuth()\n      .then(() => {\n        if (!this.state.isLogin) {\n          return Promise.resolve();\n        }\n      })\n      .catch(err => {\n        alert(\"APIがエラーを返しました\\n\\n\" + err);\n      });\n  }\n  loadAuth() {\n    return this.httpClient\n      .get(\"/auth\", {\n        params: {\n          callback: \"http://localhost:3000\"\n        }\n      })\n      .then(this.commonResponseHandling)\n      .then(result => {\n        if (result.is_login) {\n          this.setState({ isLogin: true });\n        } else if (result.auth_url) {\n          window.location.href = result.auth_url;\n        }\n      });\n  }\n\n  commonResponseHandling(res) {\n    console.debug(res);\n    if (res.data.code !== \"200\") {\n      console.error(res.data.data);\n      return Promise.reject(\"API Error:\" + res.data.data.message);\n    }\n    return Promise.resolve(res.data.data);\n  }\n\n  render() {\n    return (\n      <Router basename={process.env.PUBLIC_URL}>\n          <div className=\"wrap\">\n            <Route exact path=\"/\" component={Top} />\n            <Route path=\"/search\" component={Search} />\n            <Route path=\"/user/:id\" component={MemberInfo} />\n            <Route path=\"/game\" component={Game} />\n            {/* <Route path=\"/memberlist\" component={Memberlist} /> */}\n            {/* <Route path=\"/\" component={Memberlist} /> */}\n            {/* <Route\n              path=\"/search\"\n              render={() => (\n                <Search departmentList={this.state.departmentList} loadUserbyDepartment={e => this.loadUserbyDepartment(e)}/>\n              )}\n            />\n            <Route path=\"/game\" component={Game} />\n            <Route path=\"/memberlist\" render={() => (\n              <Memberlist departmentList={this.state.departmentList} userlist={this.state.userlist}/>\n              )}\n            /> */}\n          </div>\n        </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}